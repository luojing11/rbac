<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.rbac.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.qf.rbac.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="BIGINT" />
    <result column="wx_id" property="wxId" jdbcType="VARCHAR" />
    <result column="wx_nickname" property="wxNickname" jdbcType="VARCHAR" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="roles" property="roles" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="bonus" property="bonus" jdbcType="INTEGER" />
    <result column="isvip" property="isvip" jdbcType="BIT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_money" property="userMoney" jdbcType="DECIMAL" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, phone, wx_id, wx_nickname, roleid, roles, avatar_url, create_time, update_time,
    bonus, isvip, user_name, user_password, user_money, version, province, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.rbac.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.rbac.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.rbac.entity.User" >
    insert into user (id, phone, wx_id, 
      wx_nickname, roleid, roles, 
      avatar_url, create_time, update_time, 
      bonus, isvip, user_name, 
      user_password, user_money, version, 
      province, is_deleted)
    values (#{id,jdbcType=BIGINT}, #{phone,jdbcType=BIGINT}, #{wxId,jdbcType=VARCHAR}, 
      #{wxNickname,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, #{roles,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{bonus,jdbcType=INTEGER}, #{isvip,jdbcType=BIT}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userMoney,jdbcType=DECIMAL}, #{version,jdbcType=BIGINT}, 
      #{province,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.rbac.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="wxId != null" >
        wx_id,
      </if>
      <if test="wxNickname != null" >
        wx_nickname,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="roles != null" >
        roles,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="bonus != null" >
        bonus,
      </if>
      <if test="isvip != null" >
        isvip,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userMoney != null" >
        user_money,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="wxId != null" >
        #{wxId,jdbcType=VARCHAR},
      </if>
      <if test="wxNickname != null" >
        #{wxNickname,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="roles != null" >
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bonus != null" >
        #{bonus,jdbcType=INTEGER},
      </if>
      <if test="isvip != null" >
        #{isvip,jdbcType=BIT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userMoney != null" >
        #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.rbac.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.wxId != null" >
        wx_id = #{record.wxId,jdbcType=VARCHAR},
      </if>
      <if test="record.wxNickname != null" >
        wx_nickname = #{record.wxNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null" >
        roleid = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.roles != null" >
        roles = #{record.roles,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null" >
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bonus != null" >
        bonus = #{record.bonus,jdbcType=INTEGER},
      </if>
      <if test="record.isvip != null" >
        isvip = #{record.isvip,jdbcType=BIT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userMoney != null" >
        user_money = #{record.userMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=BIGINT},
      wx_id = #{record.wxId,jdbcType=VARCHAR},
      wx_nickname = #{record.wxNickname,jdbcType=VARCHAR},
      roleid = #{record.roleid,jdbcType=INTEGER},
      roles = #{record.roles,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      bonus = #{record.bonus,jdbcType=INTEGER},
      isvip = #{record.isvip,jdbcType=BIT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_money = #{record.userMoney,jdbcType=DECIMAL},
      version = #{record.version,jdbcType=BIGINT},
      province = #{record.province,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.rbac.entity.User" >
    update user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="wxId != null" >
        wx_id = #{wxId,jdbcType=VARCHAR},
      </if>
      <if test="wxNickname != null" >
        wx_nickname = #{wxNickname,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="roles != null" >
        roles = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bonus != null" >
        bonus = #{bonus,jdbcType=INTEGER},
      </if>
      <if test="isvip != null" >
        isvip = #{isvip,jdbcType=BIT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userMoney != null" >
        user_money = #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.rbac.entity.User" >
    update user
    set phone = #{phone,jdbcType=BIGINT},
      wx_id = #{wxId,jdbcType=VARCHAR},
      wx_nickname = #{wxNickname,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=INTEGER},
      roles = #{roles,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      bonus = #{bonus,jdbcType=INTEGER},
      isvip = #{isvip,jdbcType=BIT},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_money = #{userMoney,jdbcType=DECIMAL},
      version = #{version,jdbcType=BIGINT},
      province = #{province,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!---->
  <select id="selectUserByPhone" resultType="com.qf.rbac.entity.dto.LoginDTO">
    select * from user WHERE phone=#{phone}
  </select>
  <!---->
  <update id="updateByUserPhone" parameterType="com.qf.rbac.entity.User" >
    UPDATE USER
    SET
    avatar_url = #{avatar_url},
    user_name = #{user_name},
    user_password = #{user_password}
    WHERE phone = #{phone}
  </update>
  <!--查询所有user      OR phone=#{phone} OR roleid=#{roleid} OR isvip=#{isvip}-->
  <!--<select id="Test" resultType="com.qf.rbac.entity.dto.UserDTO">-->
    <!--SELECT id,roleid,phone,bonus,isvip,roles FROM USER-->
<!--&#45;&#45;     WHERE 1=1-->
    <!--<where>-->
      <!--<trim prefixOverrides="and">-->
        <!--<if test="phone != null" >-->
          <!--phone = #{phone}-->
        <!--</if>-->
        <!--<if test="roleid != null" >-->
          <!--and roleid = #{roleid}-->
        <!--</if>-->
        <!--<if test="isvip != null" >-->
          <!--and isvip = #{isvip}-->
        <!--</if>-->
      <!--</trim>-->
    <!--</where>-->
  <!--</select>-->
  <!--查询所有user信息-->
  <select id="selectAllUser" resultType="com.qf.rbac.entity.dto.UserDTO">
    SELECT id,roleid,roles,phone,bonus,user_name,isvip
    FROM USER
  </select>
  <!--测试  初始化所有user 根据输入条件 查询所有user信息-->
  <select id="selectAllUserByInput" resultType="com.qf.rbac.entity.dto.UserDTO">
    SELECT id,roleid,roles,phone,bonus,isvip
    FROM USER
    <where>
      <if test="phone != null" >
        phone = #{phone}
      </if>
      <if test="roleid != null" >
        and roleid = #{roleid}
      </if>
      <if test="isvip != null" >
        and isvip = #{isvip}
      </if>
    </where>
  </select>
  <!--根据输入条件查询user-->
  <select id="selectUserDtoByInput" resultType="com.qf.rbac.entity.dto.UserDTO">
    SELECT id,roleid,phone,bonus,isvip,roles FROM USER
    --     WHERE 1=1
    <where>
        <if test="phone != null" >
          phone = #{phone}
        </if>
        <if test="roleid != null" >
          and roleid = #{roleid}
        </if>
        <if test="isvip != null" >
          and isvip = #{isvip}
        </if>
    </where>
  </select>

  <update id="updateRolesByRoleId" parameterType="com.qf.rbac.entity.dto.UserDTO" >
    update user
    set roles = #{roles,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!---->
  <update id="updateRoleInfo" parameterType="com.qf.rbac.entity.dto.UserDTO" >
   UPDATE USER SET roleid=#{roleid},roles=#{roles} WHERE id=#{id}
  </update>

  <select id="getUserRoleId" resultType="com.qf.rbac.entity.dto.UserDTO">
    SELECT id,roleid,roles,phone,bonus,isvip FROM USER GROUP BY roleid
  </select>

  <select id="selectUser" resultType="com.qf.rbac.entity.User">
    SELECT u.* FROM user u where  user_name=#{username}
  </select>
</mapper>