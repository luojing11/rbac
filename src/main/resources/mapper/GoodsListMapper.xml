<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.rbac.mapper.commodity.GoodsListMapper">
  <resultMap id="BaseResultMap" type="com.qf.rbac.entity.commodity.GoodsList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsName" />
    <result column="goodsIntroduce" jdbcType="VARCHAR" property="goodsintroduce" />
    <result column="goodsImg" jdbcType="VARCHAR" property="goodsImg" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="detail_id" jdbcType="INTEGER" property="detailId" />
    <result column="putaway" jdbcType="INTEGER" property="putaway" />
    <result column="putawayTime" jdbcType="TIMESTAMP" property="putawayTime" />
    <result column="goodsNumber" jdbcType="VARCHAR" property="goodsNumber" />
    <result column="mch_id" jdbcType="INTEGER" property="mchId" />
    <result column="salesNum" jdbcType="INTEGER" property="salesnum" />
    <result column="show_id" jdbcType="INTEGER" property="showId" />
  </resultMap>


<!--  批量上下架商品-->
  <update id="updateAppGoodsDetailsByIds" parameterType="Map">
    update goods_list
    set putaway = #{putaway,jdbcType=INTEGER}
    where id in
    <foreach item="id" collection="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>

<!-- 查询商品的单价-->
  <select id="selectPrice"  resultType="com.qf.rbac.entity.dto.GoodsListDTO">
    select DISTINCT price from conver_order c LEFT JOIN goods_list g ON c.goods_id=c.mch_id
  </select>

  <!--根据id批量删除用户-->
  <delete id="deleteUserAllById" parameterType="java.lang.String">
    delete from
    goods_list  where id in
    <foreach item="id" collection="id" open="(" close=")" separator="," >
      #{id}
    </foreach>
  </delete>
  <!--  根据条件查询商品全部-->
  <select id="selectQuery" parameterType="com.qf.rbac.entity.commodity.GoodsList" resultType="com.qf.rbac.entity.dto.GoodsListDTO">
    select g.* from goods_list g where  goodsName like concat('%',#{goodsName},'%') or goodsNumber like concat('%',#{goodsNumber},'%') or putaway like concat('%',#{putaway},'%')or type like concat('%',#{type},'%')
  </select>
<!--  查询商品全部-->
  <select id="selectGoodsListDTO" parameterType="java.lang.Integer" resultType="com.qf.rbac.entity.dto.GoodsListDTO">
    select DISTINCT g.*,i.*,m.head_img from goods_list g LEFT JOIN img_list i ON g.show_id=i.show_id LEFT JOIN mch_list m ON g.show_id=m.show_id LEFT JOIN applet_user a ON g.id=a.id
    WHERE g.id=#{id}
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodsName, goodsIntroduce, goodsImg, type, price, inventory, detail_id, putaway, 
    putawayTime, goodsNumber, mch_id, salesNum, show_id
  </sql>
  <select id="selectByExample" parameterType="com.qf.rbac.entity.commodity.GoodsListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.rbac.entity.commodity.GoodsListExample">
    delete from goods_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.rbac.entity.commodity.GoodsList">
    insert into goods_list (id, goodsName, goodsIntroduce, 
      goodsImg, type, price, 
      inventory, detail_id, putaway, 
      putawayTime, goodsNumber, mch_id, 
      salesNum, show_id)
    values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsintroduce,jdbcType=VARCHAR}, 
      #{goodsimg,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{inventory,jdbcType=INTEGER}, #{detailId,jdbcType=INTEGER}, #{putaway,jdbcType=INTEGER}, 
      #{putawaytime,jdbcType=TIMESTAMP}, #{goodsnumber,jdbcType=VARCHAR}, #{mchId,jdbcType=INTEGER}, 
      #{salesnum,jdbcType=INTEGER}, #{showId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.rbac.entity.commodity.GoodsList">
    insert into goods_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsName != null">
        goodsName,
      </if>
      <if test="goodsintroduce != null">
        goodsIntroduce,
      </if>
      <if test="goodsimg != null">
        goodsImg,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="detailId != null">
        detail_id,
      </if>
      <if test="putaway != null">
        putaway,
      </if>
      <if test="putawaytime != null">
        putawayTime,
      </if>
      <if test="goodsnumber != null">
        goodsNumber,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="salesnum != null">
        salesNum,
      </if>
      <if test="showId != null">
        show_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsintroduce != null">
        #{goodsintroduce,jdbcType=VARCHAR},
      </if>
      <if test="goodsimg != null">
        #{goodsimg,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="putaway != null">
        #{putaway,jdbcType=INTEGER},
      </if>
      <if test="putawaytime != null">
        #{putawaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsnumber != null">
        #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=INTEGER},
      </if>
      <if test="salesnum != null">
        #{salesnum,jdbcType=INTEGER},
      </if>
      <if test="showId != null">
        #{showId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.rbac.entity.commodity.GoodsListExample" resultType="java.lang.Long">
    select count(*) from goods_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goodsName = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsintroduce != null">
        goodsIntroduce = #{record.goodsintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsimg != null">
        goodsImg = #{record.goodsimg,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.detailId != null">
        detail_id = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.putaway != null">
        putaway = #{record.putaway,jdbcType=INTEGER},
      </if>
      <if test="record.putawaytime != null">
        putawayTime = #{record.putawaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsnumber != null">
        goodsNumber = #{record.goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=INTEGER},
      </if>
      <if test="record.salesnum != null">
        salesNum = #{record.salesnum,jdbcType=INTEGER},
      </if>
      <if test="record.showId != null">
        show_id = #{record.showId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_list
    set id = #{record.id,jdbcType=INTEGER},
      goodsName = #{record.goodsName,jdbcType=VARCHAR},
      goodsIntroduce = #{record.goodsintroduce,jdbcType=VARCHAR},
      goodsImg = #{record.goodsimg,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      inventory = #{record.inventory,jdbcType=INTEGER},
      detail_id = #{record.detailId,jdbcType=INTEGER},
      putaway = #{record.putaway,jdbcType=INTEGER},
      putawayTime = #{record.putawaytime,jdbcType=TIMESTAMP},
      goodsNumber = #{record.goodsnumber,jdbcType=VARCHAR},
      mch_id = #{record.mchId,jdbcType=INTEGER},
      salesNum = #{record.salesnum,jdbcType=INTEGER},
      show_id = #{record.showId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.rbac.entity.commodity.GoodsList">
    update goods_list
    <set>
      <if test="goodsName != null">
        goodsName = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsintroduce != null">
        goodsIntroduce = #{goodsintroduce,jdbcType=VARCHAR},
      </if>
      <if test="goodsimg != null">
        goodsImg = #{goodsimg,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        detail_id = #{detailId,jdbcType=INTEGER},
      </if>
      <if test="putaway != null">
        putaway = #{putaway,jdbcType=INTEGER},
      </if>
      <if test="putawaytime != null">
        putawayTime = #{putawaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsnumber != null">
        goodsNumber = #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=INTEGER},
      </if>
      <if test="salesnum != null">
        salesNum = #{salesnum,jdbcType=INTEGER},
      </if>
      <if test="showId != null">
        show_id = #{showId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.rbac.entity.commodity.GoodsList">
    update goods_list
    set goodsName = #{goodsName,jdbcType=VARCHAR},
      goodsIntroduce = #{goodsintroduce,jdbcType=VARCHAR},
      goodsImg = #{goodsimg,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      detail_id = #{detailId,jdbcType=INTEGER},
      putaway = #{putaway,jdbcType=INTEGER},
      putawayTime = #{putawaytime,jdbcType=TIMESTAMP},
      goodsNumber = #{goodsnumber,jdbcType=VARCHAR},
      mch_id = #{mchId,jdbcType=INTEGER},
      salesNum = #{salesnum,jdbcType=INTEGER},
      show_id = #{showId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>