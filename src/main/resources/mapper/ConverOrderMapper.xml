<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.rbac.mapper.commodity.ConverOrderMapper">
  <resultMap id="BaseResultMap" type="com.qf.rbac.entity.commodity.ConverOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="mch_id" jdbcType="INTEGER" property="mchId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_time" jdbcType="VARCHAR" property="orderTime" />
    <result column="statuss" jdbcType="INTEGER" property="statuss" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
    <result column="logistics" jdbcType="VARCHAR" property="logistics" />
    <result column="logistics_num" jdbcType="VARCHAR" property="logisticsNum" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_remark" jdbcType="VARCHAR" property="orderRemark" />
    <result column="z_price" jdbcType="INTEGER" property="zPrice" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="is_logistics" jdbcType="INTEGER" property="isLogistics" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
  </resultMap>
  <select id="selectLikeConverOrder" parameterType="com.qf.rbac.entity.dto.ConverOrderDTO" resultType="com.qf.rbac.entity.dto.ConverOrderDTO">
    SELECT distinct c.order_id,a.username,c.statuss,c.goods_num,c.order_time FROM
      conver_order c LEFT JOIN mch_list m ON c.mch_id=m.mch_id
                     LEFT JOIN goods_list g ON c.goods_id=g.mch_id
                     LEFT JOIN applet_userinfo a ON c.user_id=a.user_id
                     LEFT JOIN address_list ad on c.mch_id=ad.mch_id WHERE
      a.username like concat('%',#{username},'%') and c.statuss like concat('%',#{statuss},'%') and c.order_time like concat('%',#{ordertime},'%')
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address_id, mch_id, order_id, order_time, statuss, goods_id, goods_num, logistics, 
    logistics_num, user_id, order_remark, z_price, type, is_logistics, order_number
  </sql>

<!--  查询订单-->
  <select id="selectConverOrder" parameterType="java.lang.Integer" resultType="com.qf.rbac.entity.dto.ConverOrderDTO">
    SELECT distinct c.order_id,a.username,c.statuss,c.goods_num,c.order_time FROM
      conver_order c LEFT JOIN mch_list m ON c.mch_id=m.mch_id
                     LEFT JOIN goods_list g ON c.goods_id=g.mch_id
                     LEFT JOIN applet_userinfo a ON c.user_id=a.user_id
                     LEFT JOIN address_list ad on c.mch_id=ad.mch_id WHERE c.mch_id=#{id}
  </select>
  <select id="selectByExample" parameterType="com.qf.rbac.entity.commodity.ConverOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from conver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from conver_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conver_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.rbac.entity.commodity.ConverOrderExample">
    delete from conver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.rbac.entity.commodity.ConverOrder">
    insert into conver_order (id, address_id, mch_id, 
      order_id, order_time, statuss, 
      goods_id, goods_num, logistics, 
      logistics_num, user_id, order_remark, 
      z_price, type, is_logistics, 
      order_number)
    values (#{id,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, #{mchId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{orderTime,jdbcType=VARCHAR}, #{statuss,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{goodsNum,jdbcType=INTEGER}, #{logistics,jdbcType=VARCHAR}, 
      #{logisticsNum,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{orderRemark,jdbcType=VARCHAR}, 
      #{zPrice,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{isLogistics,jdbcType=INTEGER}, 
      #{orderNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.rbac.entity.commodity.ConverOrder">
    insert into conver_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="statuss != null">
        statuss,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="logistics != null">
        logistics,
      </if>
      <if test="logisticsNum != null">
        logistics_num,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderRemark != null">
        order_remark,
      </if>
      <if test="zPrice != null">
        z_price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="isLogistics != null">
        is_logistics,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="statuss != null">
        #{statuss,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNum != null">
        #{logisticsNum,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderRemark != null">
        #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="zPrice != null">
        #{zPrice,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="isLogistics != null">
        #{isLogistics,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.rbac.entity.commodity.ConverOrderExample" resultType="java.lang.Long">
    select count(*) from conver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update conver_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=VARCHAR},
      </if>
      <if test="record.statuss != null">
        statuss = #{record.statuss,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNum != null">
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.logistics != null">
        logistics = #{record.logistics,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsNum != null">
        logistics_num = #{record.logisticsNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderRemark != null">
        order_remark = #{record.orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.zPrice != null">
        z_price = #{record.zPrice,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.isLogistics != null">
        is_logistics = #{record.isLogistics,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update conver_order
    set id = #{record.id,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      mch_id = #{record.mchId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=VARCHAR},
      statuss = #{record.statuss,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_num = #{record.goodsNum,jdbcType=INTEGER},
      logistics = #{record.logistics,jdbcType=VARCHAR},
      logistics_num = #{record.logisticsNum,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_remark = #{record.orderRemark,jdbcType=VARCHAR},
      z_price = #{record.zPrice,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      is_logistics = #{record.isLogistics,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.rbac.entity.commodity.ConverOrder">
    update conver_order
    <set>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="statuss != null">
        statuss = #{statuss,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="logistics != null">
        logistics = #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="logisticsNum != null">
        logistics_num = #{logisticsNum,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderRemark != null">
        order_remark = #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="zPrice != null">
        z_price = #{zPrice,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="isLogistics != null">
        is_logistics = #{isLogistics,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.rbac.entity.commodity.ConverOrder">
    update conver_order
    set address_id = #{addressId,jdbcType=INTEGER},
      mch_id = #{mchId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=VARCHAR},
      statuss = #{statuss,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      logistics = #{logistics,jdbcType=VARCHAR},
      logistics_num = #{logisticsNum,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      order_remark = #{orderRemark,jdbcType=VARCHAR},
      z_price = #{zPrice,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      is_logistics = #{isLogistics,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateConverOrder" parameterType="com.qf.rbac.entity.commodity.ConverOrder">
    update conver_order set statuss=#{stall} where id=#{id}
  </update>
</mapper>