<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.rbac.mapper.commodity.AddressListMapper">
  <resultMap id="BaseResultMap" type="com.qf.rbac.entity.commodity.AddressList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sheng" jdbcType="VARCHAR" property="sheng" />
    <result column="shi" jdbcType="VARCHAR" property="shi" />
    <result column="qu" jdbcType="VARCHAR" property="qu" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="mch_id" jdbcType="INTEGER" property="mchId" />
    <result column="is_default" jdbcType="TINYINT" property="isDefault" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, phone, sheng, shi, qu, detail, user_id, mch_id, is_default, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.qf.rbac.entity.commodity.AddressListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.rbac.entity.commodity.AddressListExample">
    delete from address_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.rbac.entity.commodity.AddressList">
    insert into address_list (id, name, phone, 
      sheng, shi, qu, detail, 
      user_id, mch_id, is_default, 
      is_delete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{sheng,jdbcType=VARCHAR}, #{shi,jdbcType=VARCHAR}, #{qu,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{mchId,jdbcType=INTEGER}, #{isDefault,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.rbac.entity.commodity.AddressList">
    insert into address_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sheng != null">
        sheng,
      </if>
      <if test="shi != null">
        shi,
      </if>
      <if test="qu != null">
        qu,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sheng != null">
        #{sheng,jdbcType=VARCHAR},
      </if>
      <if test="shi != null">
        #{shi,jdbcType=VARCHAR},
      </if>
      <if test="qu != null">
        #{qu,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.rbac.entity.commodity.AddressListExample" resultType="java.lang.Long">
    select count(*) from address_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update address_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.sheng != null">
        sheng = #{record.sheng,jdbcType=VARCHAR},
      </if>
      <if test="record.shi != null">
        shi = #{record.shi,jdbcType=VARCHAR},
      </if>
      <if test="record.qu != null">
        qu = #{record.qu,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=INTEGER},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update address_list
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      sheng = #{record.sheng,jdbcType=VARCHAR},
      shi = #{record.shi,jdbcType=VARCHAR},
      qu = #{record.qu,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      mch_id = #{record.mchId,jdbcType=INTEGER},
      is_default = #{record.isDefault,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.rbac.entity.commodity.AddressList">
    update address_list
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sheng != null">
        sheng = #{sheng,jdbcType=VARCHAR},
      </if>
      <if test="shi != null">
        shi = #{shi,jdbcType=VARCHAR},
      </if>
      <if test="qu != null">
        qu = #{qu,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.rbac.entity.commodity.AddressList">
    update address_list
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sheng = #{sheng,jdbcType=VARCHAR},
      shi = #{shi,jdbcType=VARCHAR},
      qu = #{qu,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      mch_id = #{mchId,jdbcType=INTEGER},
      is_default = #{isDefault,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>